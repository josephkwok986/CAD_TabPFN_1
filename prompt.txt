'EOF'

在所有回答和注释等内容，都尽量使用中文。



这篇论文目标是需要发 CCF B类国际期刊。在构思相关步骤，创新点，内容校验，代码等关系论文质量的事情上，请你仔细思考，逐步思考，再回答。 

# Topology-to-Table Learning with Selective and Calibrated Inference: Risk-Controlled Machining Feature Recognition under Gold-Only Training and Silver-Label OOD Auditing

**副标题：From B-Rep to Executable Decisions without New Labels**

---

## 摘要

**设定**：以公开金标 **MFInstSeg** 承担**训练/校准/主评测**；以银标 **MFCAD/MFCAD++** **不参与训练与校准**，仅作**跨域/分布外（Out-of-Distribution, OOD）佐证**与**误差敏感性**分析。

**方法**：提出 **T2T**（Topology-to-Table）流水线：候选孔重建与“孔卡片”摘要 → “一孔一行”表格化 → 分位回归 Refiner + “域×典型度”分层共形（Conformal Prediction） → 表格学习器（CatBoost/XGBoost；TabPFN 作为 few-shot 对照） → 概率校准（温度缩放或保序校准）与典型度评分 → 轻量风险头门控（LogReg/GBDT） → 标准映射与容差吸附（生成可执行工艺名义）。

**协议**：在 MFInstSeg 上执行 LODO（Leave-One-Domain-Out）与时间外切分。**阈值与温度仅在金标校准集选择**，并在所有**金标测试域**与**全部银标 OOD 集**上**一刀切复用**（不再校准、不再调参）。

**结果（示范口径）**：在“致命误改 ≤1%”红线下，MFInstSeg 总体覆盖 70–80%，最差域显著提升；银标 OOD 保持低误改，覆盖回落受控；区间名义≈实测（名义 90%，实测约 89–91%）；ECE/ACE 明显下降。

**贡献**：1) 将 B-Rep 识别重构为**可审计表格化决策**；2) **选择性预测+校准**实现覆盖–风险受控；3) 提出**Gold-only 训练/校准 + Silver-only OOD 审计**的公开基准协议；4) 通过**标准映射/容差吸附**把预测参数吸附到**可执行工艺**。

**关键词**：B-Rep；机加特征识别；选择性分类；概率校准；共形预测；OOD 审计；风险控制；表格学习。

## 1 引言

**问题与动机**：机加特征识别决定了后续工艺、工装与质量保障。工业红线强调“**宁拒误放**”，即致命误改（错误自动放行）需受控在 0.5–2% 红线内。现有端到端 B-Rep 模型在最差域与时间外场景常出现过度自信与不可复现问题。

**关键挑战**：1) 多源 CAD 的域漂移；2) 标签质量参差（公开金标 vs 银标）；3) 概率未校准、点估无置信界；4) 工艺可执行性缺少“标准化吸附”。

**我们的答案**：提出 **T2T**，把局部拓扑与几何统计转为**可审计表格**，在此基础上引入**选择性预测**与**分层共形**，并以**Gold-only 训练/校准**配合**Silver-only OOD 审计**，将研究不确定性与评测协议显式化，满足工业红线与审稿复现性要求。

**贡献概述**（与 S1–S20 对齐）：见第 2 节。

---

## 2 贡献

**C1. T2T：B-Rep → 表格化决策**
将局部拓扑子图与尺度无关几何统计组合为表格特征 + 低维实例嵌入 (z_c\in\mathbb{R}^{32\text{–}64})。在 few-shot 与跨域下更稳健，便于审计与对比学习器。

**C2. 选择性+校准：覆盖–风险受控**
分类侧对概率做温度/保序校准得 (p_{cal})；以典型度 (s) 刻画 OOD；训练风险头 (r(x)) 给出覆盖–风险曲线，并在红线 (\beta\in{0.5%,1%,2%}) 处选最大覆盖的工作点 (\rho^*)。回归侧用分位回归+分层共形给出名义≈实测的区间。

**C3. 公共基准协议：Gold-only 训练/校准 + Silver-only 审计**
提出 S1–S6 数据/切分与 S7–S16 训练–评测流水线；冻结候选器、校准映射、共形分桶与 (\rho^*)，在银标 OOD 上**一刀切外推**，避免隐性过拟合。

**C4. 可执行决策：标准映射/容差吸附**
将连续参数区间吸附至标准名义（如直径、孔口角），输出 **AutoRelease/NeedHuman** 决策，形成“从 B-Rep 到可执行工艺”的闭环接口。

## 4 方法

### 4.1 总览

流水线：S5 候选重建 → S7 摘要与 TopoEncoder → S8 Refiner（分位+共形） → S9 T2T 表 → S10 表格学习器 → S11 校准 → S12 典型度 → S13 风险头 → S14 选 (\rho^*) → S15 标准映射。所有工件固定后用于 S16 评测。

### 4.2 候选重建与“孔卡片”（S5–S6）

* 面级粗筛：圆柱/圆锥/环面/平面；单位统一 mm/deg。
* 稳健轴与分段：RANSAC 共轴合并，段序列 C/K/P（Cylinder/Cone/Plane）。
* 入口/出口识别与连通一致性；粗估 ((D_0,H_0,\alpha_0)) 与质量分 (q)。
* NMS 合并；轻过滤控伪检（2–5% 目标）。
* 在金标校准集+压力集调阈并**锁定参数** `s5_params.json`，后续一刀切外推。

### 4.3 拓扑→表格（T2T）与 TopoEncoder（S7）

* **TopoEncoder**：局部子图消息聚合，得 (z_c\in\mathbb{R}^{32\text{–}64})。
* **鲁棒摘要**：H/D、二面角分位、壁厚与边距统计、缺失指示、域元数据、质量分 (q)。
* **单位归一**：长度→mm，角度→deg，保留原单位列避免信息泄漏。

### 4.4 Refiner：分位回归 + 分层共形（S8）

* 训练分位回归（(\tau\in{0.1,0.5,0.9})），输入 [摘要+(z_c)+粗估] 输出 (\hat y_\tau)。
* 在金标校准集按“域×典型度”分层，估计每桶膨胀量 (\kappa_\gamma^{(b)})。
* 区间：( \mathcal{I}*\gamma(x)=[\hat y*{0.5}-\kappa_\gamma^{(b)}w(x),\ \hat y_{0.5}+\kappa_\gamma^{(b)}w(x)] )。(w(x)) 为不确定性尺度（如分位间距）。

### 4.5 表格后端与概率校准（S10–S11）

* 学习器：CatBoost/XGBoost 主体；TabPFN 对照。
* 校准：在金标校准集择优温度缩放或保序校准，生成映射工件 `calibration_artifacts.*`。

### 4.6 典型度、风险头与工作点（S12–S14）

* 典型度 (s)：以金训练集的 kNN 距离分布映射至百分位。马氏/GMM 作为对照。
* 风险头 (r(x))：输入 ([p_{cal}, s, \text{CI 宽度}, q, H/D, 缺失, \ldots])；输出“致命误改概率”。
* 选点：在金校上搜索阈值 (\rho)，取“误改≤(\beta) 且覆盖最大”的 (\rho^*)。

### 4.7 标准映射与容差吸附（S15）

* 以 `standards.json` 维护直径与角度公差带。若 ([D_L,D_U]) 与 ([\alpha_L,\alpha_U]) 全落入某标准带，则吸附到对应名义；否则拒识。
* 产出可执行决策：`decision∈{AutoRelease, NeedHuman}`。

---

## 5 数据与协议（S1–S6 对齐）

### 5.1 公共数据获取与校验（S1）

* 从 `CONFIG.json` 中的 URL 下载并校验 SHA256。生成 `DATA_CHECKSUMS.txt` 与 `dataset_manifest.csv`。
* 记录：`{part_id, source_dataset, dataset_tier∈{gold,silver}, raw_path, unit_hint, timestamp_raw}`。不改原目录结构。

### 5.2 去重与家族去泄漏（S2）

* 计算形状签名（直方图、bbox 比、二面角直方图、`geom_hash`）。
* 层内去重；**跨层金↔银**近邻比对，银样本触阈记 `cross_tier_quarantine=1`，仅用于敏感性。
* 家族聚类（DBSCAN，自适应 eps），输出 `part_index.for_split.csv`。

### 5.3 域定义与时间戳（S3）

* 生成 `domains_gold.csv`（金且未隔离）与 `domains_silver.csv`（含隔离标记）。

### 5.4 切分：金 LODO/时间外 + 独立校准；银 OOD 清单（S4）

* 金：训练/校准/测试并保证家族不跨拆；时间外按时间戳旧→新。
* 银：产 `ood_manifests`，区分主清单与隔离清单；并生成按域/单位/尺度分层子清单。

### 5.5 候选器与阈值锁定（S5–S6）

* 在金校+压力集调参以达“总体≥98%、最差域≥95%”召回并控伪检≤2–5%，冻结 `s5_params.json`。
* 锁阈后全量跑金测试与全部银 OOD 生成唯一入口候选。

---

## 6 实现细节（S7–S10）

* TopoEncoder 半径/层数与 (z_c) 维度；摘要特征表与缺失指示策略。
* 分位回归网络结构、损失权重与早停；分层共形的桶大小与最小样本数。
* CatBoost/XGBoost 超参搜索空间；TabPFN 配置；随机种子与硬件。
* 推理时延与 QPS；内存占用；工件持久化格式（parquet/pkl/jsonl）。

---

## 7 评测设置与指标（S11–S16）

* **分类（金标主报）**：宏/加权 F1、最差域宏 F1、Coverage–Risk 曲线、拒识 AUROC、ECE/ACE、可靠性图。
* **回归/区间（金标）**：MAE/RMSE；区间名义 vs 实测覆盖（90%/95%）；容差通过率与吸附成功率。
* **OOD（银标）**：固定 (\rho^*) 报告覆盖变化、误改率上界（结构宽容+参数区间–容差重叠≥80%）、可靠性漂移、拒识 AUROC。并做单位/尺度/倾角/自由面占比分层。
* **统计学**：置换/自助检验，95% CI；Coverage@(\beta) 报 Cliff’s delta；多域校正（Holm）。

---

## 8 对比方法与公平性约束（S16 附）

* **系统类对手**：BRepNet、BRepFormer、Hierarchical-CADNet、BRepGAT、BrepMFR；必要时纳入 Mesh/体素端到端，前提是能落到“孔实例”并共享候选入口与后端工件。
* **方法学支柱对手**：校准（温度/保序）、区间（CQR/全局/ Mondrian）、选择性（单阈/双阈/风险头/SelectiveNet 式后验门控）、OOD（MSP/马氏/Deep kNN）、表格学习器（CatBoost/XGBoost/TabPFN）。
* **统一公平性**：仅用金标训练/校准/选 (\rho^*)；候选器、校准映射、共形分桶、(\rho^*) 冻结共享；单位与标准映射一致；随机种子与预算一致；并列“总体×最差域”。


## 14 结论

在**Gold-only 训练/校准**与**Silver-only OOD 审计**下，**T2T** 借助选择性预测与概率/区间校准，在明确风险预算内实现更高覆盖与可执行决策；协议严谨、结果可复现，适配工业红线与期刊审稿关注点。



下面是实现细节的步骤（S1-S20）：

## S1｜公共数据获取与校验（加入金/银分层台账；不破坏原目录）

**目标**：下载并校验金/银数据；建立分层台账。
**输入**：`CONFIG.json`（新增：`gold_datasets=["MFInstSeg"]`,`silver_datasets=["MFCAD","MFCAD++"]`，URL，SHA256）。
**处理**：

1. 逐数据集下载并校验哈希。
2. 生成 `dataset_manifest.csv`：`{part_id, source_dataset, dataset_tier∈{gold,silver}, raw_path, unit_hint, timestamp_raw}`。
3. 仅记录单位与时间戳，不改动文件结构。
   **输出**：`raw/{dataset}/...`；`DATA_CHECKSUMS.txt`；`dataset_manifest.csv`。
   **功能/检查点**：金/银身份明确；哈希全通过。

---

## S2｜零件去重与家族去泄漏（新增跨层隔离标记）

**目标**：一物一件；同族不跨切分；**金↔银近重复隔离**。
**输入**：`dataset_manifest.csv`，原 S2 脚本与阈值。
**处理**：

* **S2.1 签名**：提取 D2 直方图、bbox 比、曲面/二面角直方图、`geom_hash`；补充 `dataset_tier`。
* **S2.2 去重**：

  * 层内（金内、银内）去重，逻辑不变；
  * 跨层近邻比对（gold vs silver，同阈值）。若相似≥阈值，则对**银标样本**置 `cross_tier_quarantine=1`。
* **S2.3 家族聚类**：各层内独立 DBSCAN + 自动 eps；保留“主族修复/for_split 表”。
  **输出**：`clean/`；`part_index.csv` 与 `part_index.for_split.csv`（新增列：`dataset_tier`,`cross_tier_quarantine`,`quarantine_reason`）；`cross_tier_report.md`。
  **功能/检查点**：金/银层间互斥；隔离样本仅用于敏感性，不进主评测。

---

## S3｜域定义与时间戳提取（分层域表）

**目标**：生成**金标域表**（供切分）与**银标域表**（供 OOD 分层）。
**输入**：`part_index.for_split.csv`，各数据集元数据。
**处理**：

1. 复用原域推断与时间戳解析。
2. 落盘两表：

   * `domains_gold.csv`：`dataset_tier=gold ∧ cross_tier_quarantine=0`；
   * `domains_silver.csv`：`dataset_tier=silver`（保留 `cross_tier_quarantine`）。
3. 记录 `unit_recorded`（原单位），不做换算。
   **输出**：`domains_gold.csv`，`domains_silver.csv`，`domain_stats.md`。
   **功能/检查点**：金/银域清单清晰，可追溯。

---

## S4｜切分：金标 LODO/时间外 + 独立校准；银标 OOD 清单

**目标**：金标完成训练/校准/测试切分；银标仅产评测清单。
**输入**：`domains_gold.csv`，`domains_silver.csv`，`part_index.for_split.csv`，`CONFIG.json`。
**处理**：

1. **金标**：

   * LODO：按 `domain` 留一域测；时间外：按 `timestamp` 旧→新；
   * 训练域内再划 `calib` 10–15%；
   * 约束：`family_id`、`content_hash` 不跨 train/calib/test；`fam_iso_*` 仅入测试。
2. **银标 OOD 清单**：

   * 主清单：`dataset_tier=silver ∧ cross_tier_quarantine=0`；
   * 隔离清单：`cross_tier_quarantine=1`（仅敏感性）。
   * 生成域分层、单位/尺度分层子清单。
3. 一致性校验并出报告。
   **输出**：

* 金标：`splits/{protocol}/split_k/{train.txt,calib.txt,test.txt}`；
* 银标：`ood_manifests/silver_all.txt`，`ood_manifests/silver_by_domain/{dom}.txt`，`ood_manifests/silver_quarantined.txt`；
* `split_integrity_report.md`。
  **功能/检查点**：金训金校锁定；银仅外推；互斥性通过。

---

## S5｜候选孔重建（高召回，统一入口）

**目标**：在金/银上统一重建候选与粗估，为可比性打底。
**输入**：金标 `train/calib/test` 清单；银标 OOD 清单；原始 B-Rep；金标真值。
**处理**：

1. 复用原候选生成与粗估；**阈值仅在金标上可回调**。
2. 银标仅生成候选与粗估，不做阈值回调。
3. 记录 `dataset_tier`。
   **输出**：`candidates/{part_id}.jsonl`（金/银）；`recall_log_gold.md`；`recall_log_silver.md`。
   **功能/检查点**：金召回达标且阈值锁定；银仅记录。

说明：
主表的所有方法均在 **S5 生成的候选孔清单** 上做条件评测，即仅对这份固定候选清单中的实例计算指标。**覆盖**=‘通过门控自动放行的实例数’÷‘候选实例总数’；**风险**=‘致命误改数’÷‘放行实例总数’；**ECE/ACE（校准误差）**与**区间覆盖率**也只在该候选清单上计算。**概率校准**（温度或保序）、**分层共形**的分桶，以及**风险门控阈值 ρ*** 一次性用**金标校准集**确定，并原样用于金标测试与全部**银标 OOD（分布外）**，不做任何再校准或调参。端到端 B-Rep 的‘**不带 S5（含检测）**’版本仅置于附录并**双口径**报告：①其**检出集合**上的条件识别结果；②**系统整体**结果（同时给出**检测召回率**与**伪检率**，即把非孔当孔的比例）。主文并列报告**总体**与**最差域**并提供显著性与效应量；随文公开 S5 候选清单、校准映射、分桶与 ρ* 等工件以便复现。

### S5 细节做法
### S5｜候选生成与控伪检
* 面级粗筛：圆柱/圆锥/环面/平面；单位统一 mm/deg。
* 稳健轴/段：RANSAC 共轴合并；段序列 C/K/P；轴向一致性阈。
* 连通与入口/出口：穿壳与终止面一致性；入口类型拟合与同轴公差。
* 粗估参数：(D_0,H_0,\alpha_0)+质量分 (q)。
* 去重 NMS：((中心, 轴向, D)) 空间合并。
* 轻过滤：H/D 合理带、法向抖动、极低质剔除；以“打标记优先，删除为辅”。

---

## S6｜候选召回压力测试（仅金标调参）

**目标**：用合成压力几何验证召回；只在金标调参。
**输入**：`candidates/`；合成压力几何。
**处理**：金标达标≥目标召回（如 98%）则**锁定门限**；银标仅评估记录。
**输出**：`recall_stress_report_gold.md`（含“阈值锁定”）；`recall_stress_report_silver.md`。
**功能/检查点**：为后续一刀切奠定稳定入口。


补充注意点：
这里S5和S6的执行步骤应该是：
1. 实现 S5 候选器 → 在**金标校准集+压力集**小范围运行，得到临时候选与召回指标。
2. 执行 S6 → 调阈值到“召回≥目标”，**固定阈值版本**。
3. 回到 S5 → 用已锁定阈值**全量**跑金测与全部银标，生成唯一入口候选。


结论：S5 追求“高召回+控伪检+可外推”，S6 用压力集一次性锁阈值。下为**概要做法**与**召回不足的回调顺序**。

### S6 细节做法
### 目标与硬约束
* 召回：总体≥98%，最差域≥95%。
* 伪检率：≤2–5%（端到端口径，附录报告）。
* 候选/件：≤3×真孔数；候选集合在 LODO/时间外稳定。
* 阈值只在金标校准集+压力集调整；银标不回调。

### 召回不足时的S5回调顺序（逐项放宽，达标即停）

1. 轴向一致性角度上调。
2. 拟合残差阈上调（圆度/锥度）。
3. 入口/出口证据放宽为“二选一”。
4. H/D 合理带扩展，仅越界打标记。
5. NMS 半径放宽，保持角度阈不变。
6. 允许相交/复合合并，标 `intersecting=1`。
7. 降低质量分下限 (q_{\min})。
8. 允许短锥段并入主段；浅沉头角度放宽。
* 每步同步检查：Δ召回、Δ伪检、候选/件、最差域；越红线即回退。
### S6｜压力测试与阈值锁定
* 压力集覆盖：微径、超斜、浅沉头、相交、薄壁、单位错配。
* 在金标校准集+压力集上执行回调；达到目标后冻结参数集合 `s5_params.json`。
* 输出 `recall_stress_report_gold.md`，标注“阈值锁定”。银标仅记录候选密度与漂移。
### 日志与度量（驱动回调与论文材料）
* 召回（总体/最差域/类别）、伪检率、候选/件分布、重复率、过滤原因直方图。
* 漏检归因：记录阻断阶段 `drop_stage`。
* 压力项通过率逐类统计。
* 明示整体自动化覆盖：`S5召回 × Coverage@β × 吸附通过率`，含95% CI。
### 交付物与复现
* `s5_params.json`、`recall_log_gold.md`、`recall_log_silver.md`、压力集与报告脚本。
* 锁阈后全量跑金测与银 OOD，产唯一候选入口；后续统一用此入口评测。

---

## S7｜特征摘要与 TopoEncoder（含单位归一）

**目标**：生成“一孔一行”所需的摘要特征与嵌入；**统一量纲**。
**输入**：`candidates/`；原始 B-Rep；`domains_*.csv`。
**处理**：

1. **TopoEncoder**：局部子图→实例嵌入 `z_c∈R^{32–64}`。
2. **鲁棒摘要**：H/D、段数、二面角分位、壁厚/边距、质量分 `q`、缺失指示、域元数据。
3. **单位归一**：长度转 mm，角度转 deg；保留 `unit_recorded`。
4. 追加 `dataset_tier`,`source_dataset`。
   **输出**：`features_summary.parquet`（金/银合并或分文件）。
   **功能/检查点**：训练与外推采用同量纲，避免单位泄漏。

---

## S8｜Refiner：分位回归 + 分层共形（仅金训金校；银外推）

**目标**：对连续参数 D/H/α 纠偏并给出置信区间。
**输入**：金标：S7 摘要 + S5 粗估 + `train/calib`；银标：S7 摘要 + S5 粗估。
**处理**：

1. 在**金标训练集**训练分位回归（τ∈{0.1,0.5,0.9}）。
2. 在**金标校准集**做“域×典型度桶”**分层共形**，得各桶膨胀量 `γ` 与回退“全局桶”。
3. 将模型与桶映射**直接应用**于金测试与银 OOD；落不到桶的样本→全局桶。
   **输出**：`refined_params.parquet`（含 `D/H/α` 点估与区间，金/银）；`refiner_model.pkl`；`conformal_buckets.json`。
   **功能/检查点**：金标名义覆盖≈实测；外推在银标可观测漂移。

---

## S9｜T2T 表拼接（统一行格式）

**目标**：构建“一孔一行”训练/评测总表。
**输入**：S7 摘要、S8 输出、S5 的 `q`、切分与 OOD 清单。
**处理**：拼接形成
`X_c=[摘要, z_c, q, 粗估, \hat D/H/α, CI_D/CI_α, 缺失, 域元数据, dataset_tier, source_dataset, split∈{train,calib,test,ood}]`。
**输出**：`t2t_table.parquet`。
**功能/检查点**：单表驱动训练、校准、测试与 OOD。

---

## S10｜表格后端训练与预测（仅金训；金测+银评推断）

**目标**：在金训练集拟合分类器；对金测试与银 OOD 推断。
**输入**：`t2t_table.parquet`。
**处理**：

1. 仅用 `dataset_tier=gold ∧ split=train` 训练 CatBoost/XGBoost（主），TabPFN（对照）。
2. 对 `split∈{calib,test,ood}` 产出**未校准**概率与类。
   **输出**：`model_*.pkl`；`MODEL_CARDS.md`；`base_preds.parquet`。
   **功能/检查点**：银标未参与任何参数学习。

建议包含下述几个头：
- 贯通/盲：判定孔是否贯穿外壳；用B-Rep连通性、入口/出口连通检查。
- 入口类型：识别入口局部几何；拟合平面/圆台/斜面，按同轴性分类。
- 底面类型：判别终止面形状；用主曲率/高斯曲率区分平/锥/球底。
- 螺纹意图：判断是否攻牙；几何有牙型则强监督，无则用名称/直径规则弱标。
- 轴向段结构模式：沿孔轴分段成序列C/K/P；依据截面变化与曲面类型离散化。
- 相交/复合标记：检测与他特征相交或复合；用拓扑子图共享面/边或体素重叠。

---

## S11｜概率校准（仅金校，外推到金测/银OOD）

**目标**：得到可信概率 `p_cal`。
**输入**：金校的未校准概率与真值；金测与银 OOD 的未校准概率。
**处理**：在**金校**选择温度缩放或保序校准（以 ECE/ACE/NLL 最优）；锁定工件。将映射应用于金测与银 OOD。
**输出**：`calibration_artifacts.{json,pkl}`；`calibrated_probs.parquet`。
**功能/检查点**：同一校准映射跨域外推。

---

## S12｜典型度 s（以金训为参照）

**目标**：量化样本“像训练分布的程度”。
**输入**：金训 `[摘要+z_c]`；金测与银 OOD 同字段。
**处理**：以金训构建 kNN 距离分布，映射到百分位 `s∈[0,1]`；记录“超范围”比例。
**输出**：`typicality.parquet`。
**功能/检查点**：为风险头与分层共形解释服务。

---

## S13｜风险头 r(x)（仅金校训练）

**目标**：估计“误改概率”（错且会被放行）。
**输入**：金校的 `f(x)=[p_cal,s,CI宽度,q,…]` 与真值；金测与银 OOD 的同构特征（无真值）。
**处理**：在**金校**训练 LogReg/小 GBDT；推断金测与银 OOD 的 `r(x)`。
**输出**：`risk_head.pkl`；`risk_scores.parquet`。
**功能/检查点**：统一风险尺度。

---

## S14｜覆盖–风险阈值选择（红线 β；仅金校选 ρ*）

**目标**：确定一刀切门控阈值 `ρ*`。
**输入**：金校的 `r(x)` 与真值；红线 `β∈{0.5%,1%,2%}`。
**处理**：在金校搜索 `ρ`，取“误改≤β 且覆盖最大”的 `ρ*`；固化。
**输出**：`operating_point.json`；`coverage_risk_curve_gold.csv`。
**功能/检查点**：`ρ*` 对金测与银 OOD 原样复用。

---

## S15｜标准映射/容差吸附（可执行决策）

**目标**：把连续参数区间映射到标准名义（如 M4、90°）。
**输入**：S8 区间、`standards.json`、`operating_point.json`。
**处理**：若 `[D_L,D_U]` 全落入某标准直径容差且 `[α_L,α_U]` 落入标准角容差，则吸附该名义；否则拒识。放行条件：`r(x)≤ρ*`。
**输出**：`exec_decisions.parquet`（含 `decision∈{AutoRelease,NeedHuman}`，`std_match`，`dataset_tier`）。
**功能/检查点**：生成可执行产线决策并保守拒识。

---

## S16｜评测（金主报 + 银 OOD 外推）

**目标**：主报金标；外加银 OOD 章。
**输入**：`exec_decisions.parquet`；金/银真值（银值按**宽容规则**使用）。
**处理**：

* **金标**：F1（宏/加权）、最差域宏 F1、Coverage–Risk@β、拒识 AUROC、ECE/ACE、区间名义 vs 实测、容差通过率、时延/QPS。
* **银标 OOD**：在固定 `ρ*` 下报告

  * 覆盖变化、误改上界（结构宽容匹配 + 参数区间–容差重叠≥阈 δ，默认 80%）；
  * 可靠性漂移（ECE/ACE）、拒识 AUROC；
  * 单位/尺度/倾角/自由面占比分层。
    **输出**：`metrics/overall_gold.csv`，`metrics/worst_domain_gold.csv`，`metrics/ood_silver.csv`；`figures/Fig*_*.pdf`（新增 Fig7 OOD 外推）。
    **功能/检查点**：证明“金训金校 + 银仅审计”在红线下的稳健外推。

### 细节：
#### 系统类对手
**对手在公平比对中使用的管线部分**
* **数据与切分**：用你的 S1–S4（金训金校；银仅外推；家族与跨层隔离）。
* **候选入口**：统一 S5/S6 候选器与阈值（高召回），只在候选清单上做条件识别。
* **其模型职责**：对“候选孔”输出结构类别与（可选）参数点估；若是面级分割，按你的聚合脚本“面→孔”。
* **不确定性与门控**：套用你的 S11（概率校准）、S8（分位+分层共形，若其无回归则接你的公共 Refiner）、S12（典型度）、S13（风险头）、S14（ρ* 一刀切）、S15（标准映射/容差吸附）。
* **评测**：按 S16 主口径与附录口径统一出表；银标仅外推，不得再校准或调参。
**属于系统类对手的代表算法模型**
* **BRepNet**：B-Rep 面/边/环图消息传递，常做面级语义分割→聚合到孔级。
* **Hierarchical-CADNet**：层次化 B-Rep 图（部件/特征/面多尺度），更强全局感受野。
* **BRepGAT**：图注意力在 B-Rep 上做特征分割或分类。
* **BrepMFR**：面向机加特征识别的 B-Rep 图网络，含面级到实例级汇总。
* **BRepFormer**：Transformer 栈融合几何与拓扑，支持通用 CAD 特征与机加场景。
* （可选补充）**Mesh/体素系端到端**：若能从 B-Rep一致落地到孔实例，也纳入，但必须走同一候选入口与同一后端校准/门控。
**关键公平性约束**
* 仅用**金标**训练、校准、选 ρ*；**银标**只评测外推。
* 候选器与粗估、校准映射、共形分桶、ρ* 全部共享且冻结。
* 统一单位与标准映射；同随机种子与超参预算；并列报告“总体×最差域”。


#### 方法学支柱对手
##### 1) 定义与边界
* 作用层：不改候选器(S5/6)、摘要/嵌入(S7)、回归 Refiner 主体(S8 训练端)。
* 可替换件：
  **校准**（把原始概率变可信；温度缩放=单温度参数；保序校准=分段单调映射）。
  **区间/共形**（把点估变置信区间；CQR=分位回归+共形；Mondrian=分组共形）。
  **选择性/拒识**（控制覆盖–风险；单阈/双阈/风险头=用特征预测“误改概率”）。
  **OOD/典型度**（度量“像训练分布的程度”；MSP=max softmax；Mahalanobis=高斯距离；Deep kNN=特征近邻一致性）。
  **表格学习器**（分类骨干；CatBoost/XGBoost/TabPFN）。
##### 2) 公平管线（必须遵守）
* 统一输入：S9步骤的输出（`t2t_table.parquet`（摘要+z_c+粗估+Refiner点估/区间+q+域元数据）等）。
* 统一数据使用：仅金标 train 训练分类器与分位回归；仅金标 calib 拟合校准与共形膨胀与门控阈值 ρ*；银标一刀切外推。
* 统一后处理：典型度 `s` 用金训构建的 kNN 百分位；风险头在金校训练；标准映射/容差吸附共用同一 `standards.json`。
* 统一评测：金标报“总体×最差域”；银标报外推（覆盖回落、误改上界、拒识 AUROC、ECE/ACE）。
##### 3) 对手清单（模块→代表算法）
* **校准**：Temperature Scaling；Isotonic（保序）；类条件温度（可选）。
* **区间/共形**：CQR（主）；全局共形；Mondrian（按“域×典型度”或单一分组）。
* **选择性/拒识**：
  * 单阈：`p_cal≥τ`；
  * 双阈：`p_cal`+`s`；
  * 风险头：LogReg/小型GBDT 输出 `r(x)`；
  * SelectiveNet-式后验门控（同输入特征，避免端到端差异）。
* **OOD/典型度**：MSP；Mahalanobis；Deep kNN（可选）。
* **表格学习器**：CatBoost、XGBoost、TabPFN（并列主干）。
##### 4) 统一选点与报告
* 红线 β∈{0.5%,1%,2%}。在金校上选 `ρ*`：误改≤β 且覆盖最大。
* 指标：宏/加权 F1、最差域宏 F1、ECE/ACE、可靠性图、Coverage–Risk 曲线与 AURC、拒识 AUROC、区间名义 vs 实测（90/95%）、容差通过率与吸附率。
* 统计：95% CI；置换/自助检验；Coverage@β 报 Cliff’s delta。
##### 5) 最小必做集（降成本不降中稿率）
* 校准：温度 vs 保序（二选一为主，另一做对照）。
* 区间：CQR（域×典型度）+ 全局共形对照。
* 选择性：单阈 + 风险头；β=1% 主文，0.5%/2% 附录。
* OOD：MSP + Mahalanobis。
* 学习器：CatBoost、XGBoost、TabPFN 三列并报。
##### 6) 常见弱点与你的抓手
* 保序在少样本域过拟合 → 以 ECE/ACE+NLL 三指标择优并锁定；
* 全局共形在低典型度样本覆盖不足 → 用“域×典型度”分桶；
* MSP 易过度自信 → 结合 `s` 与 `r(x)` 门控；
* 树模型在时间外校准差 → TabPFN 提升低样本与外推稳定性。
##### 7) 交付物（便于审稿复核）
`calibration_artifacts.*`、`conformal_buckets.json`、`typicality.parquet`、`risk_head.pkl`、`operating_point.json`、三骨干 `model_*.pkl`、评测脚本与随机种子。


---

## S17｜消融与对照（训练与阈值仍仅金标）

**目标**：验证各设计的增益与稳健性。
**输入**：可切开关：去 `z_c`、去 Refiner、共形分层关/开、典型度法（kNN/马氏/GMM）、校准法（无/温度/保序）、门控（p 阈 / p+s / 风险头）、标准映射规则（严/宽）。
**处理**：

* 在金标上训练与选 `ρ*`；
* 原样外推到银 OOD，并对比覆盖与误改上界变化。
  **输出**：`ablation/*_gold.csv`；`ablation/*_silver_ood.csv`；`ablation_summary.md`。
  **功能/检查点**：隔离变量，呈现外推影响。

---

## S18｜失败模式与可解释性（分金/银案例）

**目标**：归纳难例与拒识合理性。
**输入**：低 `s` / 宽区间 / 高 `r(x)` 清单（分金/银）。
**处理**：

* 金标：特征重要性、典型样本回溯、对齐可视化。
* 银标：额外标注“疑似银标噪声/单位错配/拓扑缺陷”标签，避免错归因。
  **输出**：`casebook/gold/*`，`casebook/silver_ood/*`。
  **功能/检查点**：展示“宁拒误放”的效果与边界行为。

---

## S19｜复现资产打包（锁定外推所需工件）

**目标**：让审稿人可一键重现“金训金校 + 银外推”。
**输入**：S1–S18 全部产物。
**处理**：打包
`refiner_model.pkl`，`conformal_buckets.json`，`model_*.pkl`，`calibration_artifacts.*`，`risk_head.pkl`，`operating_point.json`，`ood_manifests/*`，`splits/*`，`schema.md`，`standards.json`，固定随机序列与脚本。
**输出**：`release_bundle/`；`REPRO_CHECKLIST.md`；`LICENSE/NOTICE`。
**功能/检查点**：参数与阈值可审计，外推过程透明。

---

## S20｜稿件素材导出（新增 OOD 专章素材）

**目标**：输出可直接放入论文的图表与模板。
**输入**：S16–S19 文件。
**处理**：

* 图1 流程总览；图2 孔卡片；图3 分层共形；图4 Coverage–Risk（标红线 β 与 `ρ*`）；图5 可靠性图；图6 拒识 AUROC；**图7 OOD 外推曲线**；图8 失败与拒识。
* 主表：总体×最差域；附表：OOD 分层与显著性。
  **输出**：`paper_assets/`（高分辨率图、主表 CSV、附表 CSV、图注模板）。
  **功能/检查点**：与文中编号一致，可直接植入稿件。

---

### 关键一致性规则（全程生效）

* **训练/校准/阈值选择**：仅金标。
* **外推**：同一校准与 `ρ*` 应用于金测与全部银标；禁止对银标再校准或调参。
* **单位**：S7 统一到 mm/deg，并保留原单位列，防止信息泄漏与混淆。
* **隔离**：`cross_tier_quarantine=1` 的银标仅用于敏感性附录，不入主文图表。
* **最差域**：金测试各图/表均并列报告总体与最差域。
* **显著性**：主指标提供 95% CI 与多域校正；覆盖–风险在 β 处报告效应量。


旧的S2.1和S2.2代码及其config.json配置都在old_code里，帮我改造S2.1和S2.2代码及其config.json配置：
1.配置统一使用 main.yaml 配置，可以把config.json的S2.1和S2.2配置改造到 main.yaml里
2.把S2.1和S2.2都改造为尽量使用 base_components 组件来实现
3.改造后的代码放在 app/s2 目录中
4.main.yaml 每一项都添加注释


使用 tqdm 实现实现一个进度打印功能的组件，放在 base_components 中，在设计上要求使用方：
1.进度最小粒度是1%。
2.输出预估剩余时间
3.多进程下，主进程收集所有子进程的进度数据，仅在主进程输出进度，子进程不输出。
4.进度输出到控制台，无需输出到日志中
5.在 test/example_runner.py 的例子中，加入使用 进度打印功能的组件 的使用，作为一个完整使用 base_components 各个组件主要功能的样例。


1.signature_pipeline.py 重命名为 s2.1_signature_pipeline.py
2.dedup_pipeline.py 重命名为 s2.2dedup_pipeline.py
3.s2.1和s2.2都增加输出进度的功能，不要每个进程都打印进度，仅需主进程打印总进度即可。最小进度粒度是1%。使用 tqdm 实现。
4.main.yaml 的 signature 名字改为 s2.1_signature， dedup 名字改为 s2.2_signature
4.s2.1_signature_pipeline.py 的执行命令应该是 python app/s2/s2.1_signature_pipeline.py -config main.yaml ，需要实现该执行命令相关代码，即添加 main 函数
5.s2.2dedup_pipeline.py 的执行命令应该是 python app/s2/s2.2dedup_pipeline.py -config main.yaml ，需要实现该执行命令相关代码，即添加 main 函数

EOF